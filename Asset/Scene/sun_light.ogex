Metric (key = "distance") {float {1.0}}
Metric (key = "angle") {float {1.0}}
Metric (key = "time") {float {1.0}}
Metric (key = "up") {string {"z"}}

LightNode $node1
{
	Name {string {"Point"}}
	ObjectRef {ref {$light1}}

	Transform
	{
		float[16]
		{
			{1.0, 0.0, 0.0, 0.0,
			 0.0, 1.0, 0.0, 0.0,
			 0.0, 0.0, 1.0, 0.0,
			 0.0, 0.0, 1.9324970245361328, 1.0}
		}
	}
}

GeometryNode $node2
{
	Name {string {"Plane"}}
	ObjectRef {ref {$geometry1}}
	MaterialRef (index = 0) {ref {$material1}}

	Transform
	{
		float[16]
		{
			{5.741208553314209, 0.0, 0.0, 0.0,
			 0.0, 5.741208553314209, 0.0, 0.0,
			 0.0, 0.0, 5.741208553314209, 0.0,
			 0.0, 0.0, 0.0, 1.0}
		}
	}
}

CameraNode $node3
{
	Name {string {"Camera"}}
	ObjectRef {ref {$camera1}}

	Transform
	{
		float[16]
		{
			{0.6859206557273865, 0.7276763319969177, 0.0, 0.0,
			 -0.32401347160339355, 0.305420845746994, 0.8953956365585327, 0.0,
			 0.6515582203865051, -0.6141703724861145, 0.44527140259742737, 0.0,
			 7.481131553649902, -6.5076398849487305, 5.34366512298584, 1.0}
		}
	}
}

GeometryObject $geometry1		// Plane
{
	Mesh (primitive = "triangles")
	{
		VertexArray (attrib = "position")
		{
			float[3]		// 4
			{
				{-1.0, -1.0, 0.0}, {1.0, -1.0, 0.0}, {1.0, 1.0, 0.0}, {-1.0, 1.0, 0.0}
			}
		}

		VertexArray (attrib = "normal")
		{
			float[3]		// 4
			{
				{0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}
			}
		}

		IndexArray
		{
			unsigned_int32[3]		// 2
			{
				{0, 1, 2}, {0, 2, 3}
			}
		}
	}
}

LightObject $light1 (type = "infinite", shadow = false)		// Point
{
	Color (attrib = "light") {float[3] {{1.0, 1.0, 1.0}}}
}

CameraObject $camera1		// Camera
{
	Param (attrib = "fov") {float {0.8575560450553894}}
	Param (attrib = "near") {float {0.10000000149011612}}
	Param (attrib = "far") {float {100.0}}
}

Material $material1
{
	Name {string {"Material.001"}}

	Color (attrib = "diffuse") {float[3] {{0.6400000190734865, 0.6400000190734865, 0.6400000190734865}}}
	Color (attrib = "specular") {float[3] {{0.5, 0.5, 0.5}}}
	Param (attrib = "specular_power") {float {50}}
}