add_library(Common
IApplication.hpp
Interface.hpp
IruntimeModule.hpp
GfxConfiguration.hpp
BaseApplication.hpp
BaseApplication.cpp
GraphicsManager.hpp
GraphicsManager.cpp
GeomMath.hpp
ResLoader.hpp
ResLoader.cpp
Guid.hpp
Guid.cpp
Engine.hpp
Engine.cpp
IPhysicsManager.hpp
SceneObject.hpp
SceneObject.cpp
SceneObjectTypeDef.hpp
BaseSceneObject.hpp
BaseSceneObject.cpp
SceneObjectIndexArray.hpp
SceneObjectIndexArray.cpp
SceneObjectVertexArray.hpp
SceneObjectVertexArray.cpp
SceneObjectMesh.hpp
SceneObjectMesh.cpp
SceneObjectTexture.hpp
SceneObjectTexture.cpp
SceneObjectMaterial.hpp
SceneObjectMaterial.cpp
SceneObjectGeometry.hpp
SceneObjectGeometry.cpp
SceneObjectCamera.hpp
SceneObjectCamera.cpp
SceneObjectTransform.hpp
SceneObjectTransform.cpp
SceneNode.hpp
SceneNode.cpp
BaseSceneNode.hpp
BaseSceneNode.cpp
SceneGeometryNode.hpp
SceneGeometryNode.cpp
SceneLightNode.hpp
SceneLightNode.cpp
SceneCameraNode.hpp
SceneCameraNode.cpp
SceneParser.hpp
SceneParser.cpp
SceneManager.hpp
SceneManager.cpp
Scene.hpp
Scene.cpp
OGEX.hpp
Image.hpp
ImageParser.hpp
ImageParser.cpp
InputManager.hpp
InputManager.cpp
Buffer.hpp
GameLogic.hpp
GameLogic.cpp
DebugManager.hpp
DebugManager.cpp
../Algorism/Tree.hpp
GfxStructures.hpp
IDrawPass.hpp
ForwardRenderPass.hpp
ForwardRenderPass.cpp
ShadowMapPass.hpp
ShadowMapPass.cpp
HUDPass.hpp
HUDPass.cpp
IShaderManager.hpp
IShaderManager.cpp
main.cpp
)

target_include_directories(Common PUBLIC "${PROJECT_SOURCE_DIR}/3rdparty/glm/include")

target_link_libraries(Common ${OPENGEX_LIBRARY} ${OPENDDL_LIBRARY} ${BULLET_COLLISION_LIBRARY} ${BULLET_DYNAMICS_LIBRARY} ${BULLET_LINEARMATH_LIBRARY})